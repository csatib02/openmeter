name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Nix
        uses: cachix/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c # v26
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Set up magic Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@eeabdb06718ac63a7021c6132129679a8e22d0c7 # v3

      - name: Prepare Nix shell
        run: nix develop --impure .#ci

      - name: Build Server
        run: nix develop --impure .#ci -c make build-server

      - name: Build Sink Worker
        run: nix develop --impure .#ci -c make build-sink-worker

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Nix
        uses: cachix/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c # v26
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Set up magic Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@eeabdb06718ac63a7021c6132129679a8e22d0c7 # v3

      - name: Prepare Nix shell
        run: nix develop --impure .#ci

      - name: Test
        run: nix develop --impure .#ci -c make test
        env:
          DAGGER_CLOUD_TOKEN: ${{ secrets.DAGGER_CLOUD_TOKEN }}

      - name: Stop Engine
        run: docker stop -t 300 $(docker ps --filter name="dagger-engine-*" -q)
        if: always()

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Set up Nix
        uses: cachix/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c # v26
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Set up magic Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@eeabdb06718ac63a7021c6132129679a8e22d0c7 # v3

      - name: Prepare Nix shell
        run: nix develop --impure .#ci

      - name: Lint
        run: nix develop --impure .#ci -c make lint
        env:
          DAGGER_CLOUD_TOKEN: ${{ secrets.DAGGER_CLOUD_TOKEN }}

      - name: Pre-commit hooks
        run: nix develop --impure .#ci -c pre-commit run -a

      - name: Check commit messages
        run: nix develop --impure .#ci -c pre-commit run --hook-stage manual

      - name: Stop Engine
        run: docker stop -t 300 $(docker ps --filter name="dagger-engine-*" -q)
        if: always()

  license-check:
    name: License check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Set up Nix
        uses: cachix/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c # v26
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Set up magic Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@eeabdb06718ac63a7021c6132129679a8e22d0c7 # v3

      - name: Cache license information
        uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 # v4.0.1
        with:
          path: .licensei.cache
          key: licensei-v1-${{ github.ref_name }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            licensei-v1-${{ github.ref_name }}
            licensei-v1-main
            licensei-v1

      - name: Prepare Nix shell
        run: nix develop --impure .#ci

      - name: Populate license cache
        run: nix develop --impure .#ci -c licensei cache
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check licenses
        run: nix develop --impure .#ci -c make license-check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dev:
    name: Developer environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Nix
        uses: cachix/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c # v26
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Set up magic Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@eeabdb06718ac63a7021c6132129679a8e22d0c7 # v3

      - name: Check
        run: nix flake check --impure

      - name: Dev shell
        run: nix develop --impure

  artifacts:
    name: Artifacts
    uses: ./.github/workflows/artifacts.yaml
    with:
      publish: ${{ github.event_name == 'push' }}
    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write

  dependency-review:
    name: Dependency review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Dependency Review
        uses: actions/dependency-review-action@9129d7d40b8c12c1ed0f60400d00c92d437adcce # v4.1.3

  fossa-scan:
    name: FOSSA Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Run FOSSA Scan
        uses: fossas/fossa-action@47ef11b1e1e3812e88dae436ccbd2d0cbd1adab0 # v1.3.3
        with:
          api-key: ${{secrets.FOSSA_API_KEY}}

  # TODO: Rewrite this into Dagger
  quickstart:
    name: Quickstart
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Launch Docker Compose
        run: docker compose -f docker-compose.yaml -f docker-compose.ci.yaml up -d
        working-directory: quickstart

      - name: Wait for worker to become ready
        run: curl --retry 10 --retry-max-time 120 --retry-all-errors http://localhost:10000/healthz

      # This is probably overkill but it can happen that OpenMeter creates namespaces slower
      - name: Wait to pickup namespace
        run: sleep 5

      - name: Ingest sample data
        run: ./ingest.sh
        working-directory: quickstart

      - name: Wait for data to be processed
        run: sleep 20

      - name: Verify sample data
        run: ./verify.sh
        working-directory: quickstart

      - name: Cleanup Docker Compose
        run: docker compose -f docker-compose.yaml -f docker-compose.ci.yaml down -v
        working-directory: quickstart
        if: always()

  e2e:
    name: E2E
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Nix
        uses: cachix/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c # v26
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Set up magic Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@eeabdb06718ac63a7021c6132129679a8e22d0c7 # v3

      - name: Prepare Nix shell
        run: nix develop --impure .#ci

      - name: Test
        run: nix develop --impure .#ci -c dagger call etoe
        env:
          DAGGER_CLOUD_TOKEN: ${{ secrets.DAGGER_CLOUD_TOKEN }}

      - name: Stop Engine
        run: docker stop -t 300 $(docker ps --filter name="dagger-engine-*" -q)
        if: always()

  dagger:
    name: CI
    runs-on: ${{ github.actor == 'dependabot[bot]' && 'ubuntu-latest' || 'ubuntu-latest-large' }}

    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Run pipeline
        uses: dagger/dagger-for-github@698ef94185f8baaa1f3c3d825a7d3d487152db2f # v5.2.0
        with:
          verb: call
          module: github.com/${{ github.repository }}/ci@${{ github.ref }}
          args: --checkout ${{ github.ref }} ci
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
          version: "0.9.7"
